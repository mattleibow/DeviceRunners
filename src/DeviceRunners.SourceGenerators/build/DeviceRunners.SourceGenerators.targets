<?xml version="1.0" encoding="utf-8"?>
<Project>
  <ItemGroup>
    <Analyzer Include="$(MSBuildThisFileDirectory)../analyzers/dotnet/cs/DeviceRunners.SourceGenerators.dll" />
  </ItemGroup>

  <!-- Add iOS partial app manifest -->
  <ItemGroup Condition="'$(TargetPlatformIdentifier)' == 'ios'">
    <PartialAppManifest Include="$(MSBuildThisFileDirectory)templates/iOS/Info.plist" />
  </ItemGroup>

  <!-- Add macOS Catalyst partial app manifest -->
  <ItemGroup Condition="'$(TargetPlatformIdentifier)' == 'maccatalyst'">
    <PartialAppManifest Include="$(MSBuildThisFileDirectory)templates/MacCatalyst/Info.plist" />
  </ItemGroup>

  <!-- Windows XAML and manifest files -->
  <Target Name="PrepareWindowsFiles" BeforeTargets="BeforeBuild" Condition="'$(TargetPlatformIdentifier)' == 'windows'">
    
    <!-- Copy and process App.xaml -->
    <PropertyGroup>
      <_DeviceRunnerWindowsAppXamlTemplate>$(MSBuildThisFileDirectory)templates/Windows/App.xaml</_DeviceRunnerWindowsAppXamlTemplate>
      <_DeviceRunnerWindowsAppXamlDestination>$(IntermediateOutputPath)Platforms/Windows/App.xaml</_DeviceRunnerWindowsAppXamlDestination>
    </PropertyGroup>
    
    <MakeDir Directories="$(IntermediateOutputPath)Platforms/Windows/" />
    
    <ReadLinesFromFile File="$(_DeviceRunnerWindowsAppXamlTemplate)">
      <Output TaskParameter="Lines" ItemName="_WindowsAppXamlLines" />
    </ReadLinesFromFile>
    
    <PropertyGroup>
      <_WindowsAppXamlContent>@(_WindowsAppXamlLines, '%0D%0A')</_WindowsAppXamlContent>
      <_WindowsAppXamlContent>$(_WindowsAppXamlContent.Replace('{{RootNamespace}}', '$(RootNamespace)'))</_WindowsAppXamlContent>
    </PropertyGroup>
    
    <WriteLinesToFile File="$(_DeviceRunnerWindowsAppXamlDestination)" Lines="$(_WindowsAppXamlContent)" Overwrite="true" />
    
    <!-- Copy and process app.manifest -->
    <PropertyGroup>
      <_DeviceRunnerWindowsAppManifestTemplate>$(MSBuildThisFileDirectory)templates/Windows/app.manifest</_DeviceRunnerWindowsAppManifestTemplate>
      <_DeviceRunnerWindowsAppManifestDestination>$(IntermediateOutputPath)Platforms/Windows/app.manifest</_DeviceRunnerWindowsAppManifestDestination>
    </PropertyGroup>
    
    <ReadLinesFromFile File="$(_DeviceRunnerWindowsAppManifestTemplate)">
      <Output TaskParameter="Lines" ItemName="_WindowsAppManifestLines" />
    </ReadLinesFromFile>
    
    <PropertyGroup>
      <_WindowsAppManifestContent>@(_WindowsAppManifestLines, '%0D%0A')</_WindowsAppManifestContent>
      <_WindowsAppManifestContent>$(_WindowsAppManifestContent.Replace('{{RootNamespace}}', '$(RootNamespace)'))</_WindowsAppManifestContent>
    </PropertyGroup>
    
    <WriteLinesToFile File="$(_DeviceRunnerWindowsAppManifestDestination)" Lines="$(_WindowsAppManifestContent)" Overwrite="true" />

    <!-- Copy and process Package.appxmanifest -->
    <PropertyGroup>
      <_DeviceRunnerWindowsPackageManifestTemplate>$(MSBuildThisFileDirectory)templates/Windows/Package.appxmanifest</_DeviceRunnerWindowsPackageManifestTemplate>
      <_DeviceRunnerWindowsPackageManifestDestination>$(IntermediateOutputPath)Platforms/Windows/Package.appxmanifest</_DeviceRunnerWindowsPackageManifestDestination>
    </PropertyGroup>
    
    <ReadLinesFromFile File="$(_DeviceRunnerWindowsPackageManifestTemplate)">
      <Output TaskParameter="Lines" ItemName="_WindowsPackageManifestLines" />
    </ReadLinesFromFile>
    
    <PropertyGroup>
      <_WindowsPackageManifestContent>@(_WindowsPackageManifestLines, '%0D%0A')</_WindowsPackageManifestContent>
      <_WindowsPackageManifestContent>$(_WindowsPackageManifestContent.Replace('{{ApplicationTitle}}', '$(ApplicationTitle)'))</_WindowsPackageManifestContent>
      <_WindowsPackageManifestContent>$(_WindowsPackageManifestContent.Replace('{{ApplicationId}}', '$(ApplicationId)'))</_WindowsPackageManifestContent>
    </PropertyGroup>
    
    <WriteLinesToFile File="$(_DeviceRunnerWindowsPackageManifestDestination)" Lines="$(_WindowsPackageManifestContent)" Overwrite="true" />
  </Target>

  <!-- Add the processed Windows files to the build -->
  <ItemGroup Condition="'$(TargetPlatformIdentifier)' == 'windows'">
    <Page Include="$(IntermediateOutputPath)Platforms/Windows/App.xaml" />
    <ApplicationManifest Include="$(IntermediateOutputPath)Platforms/Windows/app.manifest" />
    <AppxManifest Include="$(IntermediateOutputPath)Platforms/Windows/Package.appxmanifest" />
  </ItemGroup>

  <!-- Exclude default Visual Studio test runner files from packaging -->
  <Target Name="RemoveVisualStudioTestRunner" BeforeTargets="_ComputeAppxPackagePayload">
    <ItemGroup>
      <_VisualStudioTestRunnerFiles Include="@(PackagingOutputs)" Condition="$([System.String]::Copy('%(PackagingOutputs.FullPath)').Contains('xunit.runner.visualstudio'))" />
      <PackagingOutputs Remove="@(_VisualStudioTestRunnerFiles)" />
    </ItemGroup>
  </Target>

  <!-- Add default app icon and splash screen from templates -->
  <ItemGroup>
    <MauiIcon Include="$(MSBuildThisFileDirectory)templates/Resources/AppIcon/appicon.svg" ForegroundFile="$(MSBuildThisFileDirectory)templates/Resources/AppIcon/appiconfg.svg" Color="#512BD4" />
    <MauiSplashScreen Include="$(MSBuildThisFileDirectory)templates/Resources/Splash/splash.svg" Color="#512BD4" BaseSize="128,128" />
  </ItemGroup>

</Project>