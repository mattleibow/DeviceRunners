<?xml version="1.0" encoding="utf-8"?>
<Project>

  <!-- Define all template files and their destinations -->
  <ItemGroup>
    <!-- Android templates -->
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/Android/MainActivity.cs.template">
      <Destination>$(IntermediateOutputPath)Platforms/Android/MainActivity.cs</Destination>
      <Platform>android</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/Android/MainApplication.cs.template">
      <Destination>$(IntermediateOutputPath)Platforms/Android/MainApplication.cs</Destination>
      <Platform>android</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    
    <!-- iOS templates -->
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/iOS/Program.cs.template">
      <Destination>$(IntermediateOutputPath)Platforms/iOS/Program.cs</Destination>
      <Platform>ios</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/iOS/AppDelegate.cs.template">
      <Destination>$(IntermediateOutputPath)Platforms/iOS/AppDelegate.cs</Destination>
      <Platform>ios</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    
    <!-- macOS Catalyst templates -->
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/MacCatalyst/Program.cs.template">
      <Destination>$(IntermediateOutputPath)Platforms/MacCatalyst/Program.cs</Destination>
      <Platform>maccatalyst</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/MacCatalyst/AppDelegate.cs.template">
      <Destination>$(IntermediateOutputPath)Platforms/MacCatalyst/AppDelegate.cs</Destination>
      <Platform>maccatalyst</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    
    <!-- Windows templates -->
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/Windows/App.xaml.cs.template">
      <Destination>$(IntermediateOutputPath)Platforms/Windows/App.xaml.cs</Destination>
      <Platform>windows</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Windows/App.xaml">
      <Destination>$(IntermediateOutputPath)Platforms/Windows/App.xaml</Destination>
      <Platform>windows</Platform>
      <BuildAction>Page</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Windows/app.manifest">
      <Destination>$(IntermediateOutputPath)Platforms/Windows/app.manifest</Destination>
      <Platform>windows</Platform>
      <BuildAction>ApplicationManifest</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Windows/Package.appxmanifest">
      <Destination>$(IntermediateOutputPath)Platforms/Windows/Package.appxmanifest</Destination>
      <Platform>windows</Platform>
      <BuildAction>AppxManifest</BuildAction>
    </TemplateFile>
  </ItemGroup>

  <!-- Process all template files in one target using batching -->
  <Target Name="ProcessAllTemplates" BeforeTargets="BeforeCompile" Condition="'$(_ShouldGenerateDeviceTestApp)' == 'true'" 
          Inputs="@(TemplateFile)" Outputs="%(TemplateFile.Destination)">
    
    <!-- Create output directory -->
    <MakeDir Directories="$([System.IO.Path]::GetDirectoryName('%(TemplateFile.Destination)'))" />
    
    <!-- Read template file as single string -->
    <PropertyGroup>
      <_TemplateContent>$([System.IO.File]::ReadAllText('%(TemplateFile.Identity)'))</_TemplateContent>
      <_ProcessedContent>$(_TemplateContent.Replace('{{RootNamespace}}', '$(RootNamespace)'))</_ProcessedContent>
      <_ProcessedContent>$(_ProcessedContent.Replace('{{ApplicationTitle}}', '$(ApplicationTitle)'))</_ProcessedContent>
      <_ProcessedContent>$(_ProcessedContent.Replace('{{ApplicationId}}', '$(ApplicationId)'))</_ProcessedContent>
      <_ProcessedContent>$(_ProcessedContent.Replace('{{AppId}}', '$(ApplicationId)'))</_ProcessedContent>
    </PropertyGroup>
    
    <!-- Write processed file -->
    <WriteLinesToFile File="%(TemplateFile.Destination)" Lines="$(_ProcessedContent)" Overwrite="true" />
  </Target>

  <!-- Add iOS partial app manifest -->
  <ItemGroup Condition="'$(TargetPlatformIdentifier)' == 'ios'">
    <PartialAppManifest Include="$(MSBuildThisFileDirectory)templates/iOS/Info.plist" />
  </ItemGroup>

  <!-- Add macOS Catalyst partial app manifest -->
  <ItemGroup Condition="'$(TargetPlatformIdentifier)' == 'maccatalyst'">
    <PartialAppManifest Include="$(MSBuildThisFileDirectory)templates/MacCatalyst/Info.plist" />
  </ItemGroup>

  <!-- Include processed files in build based on platform and build action -->
  <ItemGroup Condition="'$(TargetPlatformIdentifier)' == 'android' AND '$(_ShouldGenerateDeviceTestApp)' == 'true'">
    <Compile Include="$(IntermediateOutputPath)Platforms/Android/MainActivity.cs" />
    <Compile Include="$(IntermediateOutputPath)Platforms/Android/MainApplication.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetPlatformIdentifier)' == 'ios' AND '$(_ShouldGenerateDeviceTestApp)' == 'true'">
    <Compile Include="$(IntermediateOutputPath)Platforms/iOS/Program.cs" />
    <Compile Include="$(IntermediateOutputPath)Platforms/iOS/AppDelegate.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetPlatformIdentifier)' == 'maccatalyst' AND '$(_ShouldGenerateDeviceTestApp)' == 'true'">
    <Compile Include="$(IntermediateOutputPath)Platforms/MacCatalyst/Program.cs" />
    <Compile Include="$(IntermediateOutputPath)Platforms/MacCatalyst/AppDelegate.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetPlatformIdentifier)' == 'windows' AND '$(_ShouldGenerateDeviceTestApp)' == 'true'">
    <Compile Include="$(IntermediateOutputPath)Platforms/Windows/App.xaml.cs" />
    <Page Include="$(IntermediateOutputPath)Platforms/Windows/App.xaml" />
    <ApplicationManifest Include="$(IntermediateOutputPath)Platforms/Windows/app.manifest" />
    <AppxManifest Include="$(IntermediateOutputPath)Platforms/Windows/Package.appxmanifest" />
  </ItemGroup>

  <!-- Exclude default Visual Studio test runner files from packaging -->
  <Target Name="RemoveVisualStudioTestRunner" BeforeTargets="_ComputeAppxPackagePayload">
    <ItemGroup>
      <_VisualStudioTestRunnerFiles Include="@(PackagingOutputs)" Condition="$([System.String]::Copy('%(PackagingOutputs.FullPath)').Contains('xunit.runner.visualstudio'))" />
      <PackagingOutputs Remove="@(_VisualStudioTestRunnerFiles)" />
    </ItemGroup>
  </Target>

  <!-- Add default app icon and splash screen from templates -->
  <ItemGroup>
    <MauiIcon Include="$(MSBuildThisFileDirectory)templates/Resources/AppIcon/appicon.svg" ForegroundFile="$(MSBuildThisFileDirectory)templates/Resources/AppIcon/appiconfg.svg" Color="#512BD4" />
    <MauiSplashScreen Include="$(MSBuildThisFileDirectory)templates/Resources/Splash/splash.svg" Color="#512BD4" BaseSize="128,128" />
  </ItemGroup>

</Project>