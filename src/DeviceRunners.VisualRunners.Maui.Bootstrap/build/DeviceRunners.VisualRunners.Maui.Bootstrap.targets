<?xml version="1.0" encoding="utf-8"?>
<Project>

  <!--
    This MSBuild targets file processes platform-specific template files for DeviceRunners VisualRunners Maui Bootstrap projects.
    It generates source and manifest files for each supported platform, handles test runner exclusions, and adds default icons and splash screens.
  -->

  <ItemGroup>

    <!--
      The below TemplateFile items define the source template, destination, platform, and build action for each platform-specific file.
      These templates are processed and copied to the intermediate output directory before compilation.
    -->

    <!--
      Android platform template files
    -->
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/Android/MainActivity.cs.template">
      <Destination>Platforms/Android/MainActivity.cs</Destination>
      <Platform>android</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/Android/MainApplication.cs.template">
      <Destination>Platforms/Android/MainApplication.cs</Destination>
      <Platform>android</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    
    <!--
      iOS platform template files
    -->
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/iOS/Program.cs.template">
      <Destination>Platforms/iOS/Program.cs</Destination>
      <Platform>ios</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/iOS/AppDelegate.cs.template">
      <Destination>Platforms/iOS/AppDelegate.cs</Destination>
      <Platform>ios</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/iOS/Info.plist.template">
      <Destination>Platforms/iOS/Info.plist</Destination>
      <Platform>ios</Platform>
      <BuildAction>PartialAppManifest</BuildAction>
    </TemplateFile>
    
    <!--
      Mac Catalyst platform template files
    -->
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/MacCatalyst/Program.cs.template">
      <Destination>Platforms/MacCatalyst/Program.cs</Destination>
      <Platform>maccatalyst</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/MacCatalyst/AppDelegate.cs.template">
      <Destination>Platforms/MacCatalyst/AppDelegate.cs</Destination>
      <Platform>maccatalyst</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/MacCatalyst/Info.plist.template">
      <Destination>Platforms/MacCatalyst/Info.plist</Destination>
      <Platform>maccatalyst</Platform>
      <BuildAction>PartialAppManifest</BuildAction>
    </TemplateFile>
    
    <!--
      Windows platform template files
    -->
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/Windows/App.xaml.cs.template">
      <Destination>Platforms/Windows/App.xaml.cs</Destination>
      <Platform>windows</Platform>
      <BuildAction>Compile</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/Windows/App.xaml.template">
      <Destination>Platforms/Windows/App.xaml</Destination>
      <Platform>windows</Platform>
      <BuildAction>Page</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/Windows/app.manifest.template">
      <Destination>Platforms/Windows/app.manifest</Destination>
      <Platform>windows</Platform>
      <BuildAction>ApplicationManifest</BuildAction>
    </TemplateFile>
    <TemplateFile Include="$(MSBuildThisFileDirectory)templates/Platforms/Windows/Package.appxmanifest.template">
      <Destination>Platforms/Windows/Package.appxmanifest</Destination>
      <Platform>windows</Platform>
      <BuildAction>AppxManifest</BuildAction>
    </TemplateFile>

  </ItemGroup>

  <!--
    Target: ProcessAllTemplates
    Processes all TemplateFile items, replacing template variables and writing the output to the appropriate destination.
    Ensures generated files are included in the build with the correct build action.
  -->
  <Target Name="ProcessAllTemplates" BeforeTargets="ResizetizeCollectItems"
          Inputs="@(TemplateFile)" Outputs="%(TemplateFile.Destination)">

    <PropertyGroup>
      <_DeviceRunnersIntermediateOutputPath>$(IntermediateOutputPath)bootstrap/%(TemplateFile.Destination)</_DeviceRunnersIntermediateOutputPath>
    </PropertyGroup>

    <MakeDir Directories="$([System.IO.Path]::GetDirectoryName('$(_DeviceRunnersIntermediateOutputPath)'))" />
    
    <PropertyGroup>
      <_TemplateContent>$([System.IO.File]::ReadAllText('%(TemplateFile.Identity)'))</_TemplateContent>
      <_ProcessedContent>$(_TemplateContent.Replace('{{RootNamespace}}', '$(RootNamespace)'))</_ProcessedContent>
      <_ProcessedContent>$(_ProcessedContent.Replace('{{ApplicationTitle}}', '$(ApplicationTitle)'))</_ProcessedContent>
      <_ProcessedContent>$(_ProcessedContent.Replace('{{ApplicationId}}', '$(ApplicationId)'))</_ProcessedContent>
    </PropertyGroup>
    
    <WriteLinesToFile File="$(_DeviceRunnersIntermediateOutputPath)" Lines="$(_ProcessedContent)" Overwrite="true" WriteOnlyWhenDifferent="true" />
    
    <ItemGroup>
      <FileWrites Include="$(_DeviceRunnersIntermediateOutputPath)" />
    </ItemGroup>

    <CreateItem Include="$(_DeviceRunnersIntermediateOutputPath)" Condition="'%(TemplateFile.Platform)' == '$(TargetPlatformIdentifier)'">
      <Output TaskParameter="Include" ItemName="%(TemplateFile.BuildAction)" />
    </CreateItem>

  </Target>

  <!--
    Target: RemoveVisualStudioTestRunner
    Removes default Visual Studio test runner files (e.g., xunit.runner.visualstudio) from the app package to avoid unnecessary bloat.
  -->
  <Target Name="RemoveVisualStudioTestRunner" BeforeTargets="_ComputeAppxPackagePayload">
    <ItemGroup>
      <_VisualStudioTestRunnerFiles Include="@(PackagingOutputs)" Condition="$([System.String]::Copy('%(PackagingOutputs.FullPath)').Contains('xunit.runner.visualstudio'))" />
      <PackagingOutputs Remove="@(_VisualStudioTestRunnerFiles)" />
    </ItemGroup>
  </Target>

  <!--
    Add default app icon and splash screen from templates for Maui projects.
  -->
  <ItemGroup>
    <MauiIcon Include="$(MSBuildThisFileDirectory)templates/Resources/AppIcon/appicon.svg" ForegroundFile="$(MSBuildThisFileDirectory)templates/Resources/AppIcon/appiconfg.svg" Color="#512BD4" />
    <MauiSplashScreen Include="$(MSBuildThisFileDirectory)templates/Resources/Splash/splash.svg" Color="#512BD4" BaseSize="128,128" />
  </ItemGroup>

</Project>